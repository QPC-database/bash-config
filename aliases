alias alias-update=". $BASH_CONFIG_DIR/aliases"
alias aliasupdate="alias-update"
alias b='time PATH=~/goma:$PATH `ninja-detect-goma` -C out/Release chrome ppapi_example_mouse_lock && r || notify-fail'
alias bb='time PATH=~/goma:$PATH `ninja-detect-goma` -C out/Release chrome ppapi_example_mouse_lock test_shell_tests content_unittests content_browsertests unit_tests ui_tests && r || notify-fail'
alias bbt='time PATH=~/goma:$PATH `ninja-detect-goma` -C out/Release browser_tests && out/Release/browser_tests --gtest_filter="*Fullscreen*:*FullScreen*:*Presentation*:*MouseLock*:*PointerLock*" || notify-fail'
alias bbt_='time PATH=~/goma:$PATH `ninja-detect-goma` -C out/Release browser_tests && out/Release/browser_tests --gtest_filter="BrowserTest.MouseLockThenFullscreen" || notify-fail'
alias bbtd='time PATH=~/goma:$PATH `ninja-detect-goma` -C out/Debug browser_tests && out/Debug/browser_tests --gtest_filter="*Fullscreen*:*FullScreen*:*Presentation*:*MouseLock*:*PointerLock*" || notify-fail'
alias bbtd_='time PATH=~/goma:$PATH `ninja-detect-goma` -C out/Debug browser_tests && out/Debug/browser_tests --gtest_filter="BrowserTest.MouseLockThenFullscreen" || notify-fail'
alias bct='time PATH=~/goma:$PATH `ninja-detect-goma` -C out/Release content_unittests && out/Release/content_unittests --gtest_filter="*Fullscreen*:*FullScreen*:*Presentation*:*MouseLock*:*PointerLock*" || notify-fail'
alias bctd='time PATH=~/goma:$PATH `ninja-detect-goma` -C out/Debug content_unittests && out/Debug/content_unittests --gtest_filter="*Fullscreen*:*FullScreen*:*Presentation*:*MouseLock*:*PointerLock*" || notify-fail'
alias bd='time PATH=~/goma:$PATH `ninja-detect-goma` -C out/Debug chrome ppapi_example_mouse_lock && rd || notify-fail'
alias bdb='time PATH=~/goma:$PATH `ninja-detect-goma` -C out/Debug chrome ppapi_example_mouse_lock test_shell_tests content_unittests content_browsertests && rd || notify-fail'
alias bdrt='time PATH=~/goma:$PATH `ninja-detect-goma` -C out/Release DumpRenderTree && webkit/tools/layout_tests/run_webkit_tests.sh pointer-lock http/tests/pointer-lock fullscreen http/tests/fullscreen fast/dom/navigator-detached-no-crash.html && notify'
alias bdrtd='time PATH=~/goma:$PATH `ninja-detect-goma` -C out/Debug DumpRenderTree && webkit/tools/layout_tests/run_webkit_tests.sh --debug pointer-lock http/tests/pointer-lock fullscreen http/tests/fullscreen fast/dom/navigator-detached-no-crash.html && notify'
alias bit='time PATH=~/goma:$PATH `ninja-detect-goma` -C out/Release interactive_ui_tests && out/Release/interactive_ui_tests --gtest_filter="*Fullscreen*:*FullScreen*:*Presentation*:*MouseLock*:*PointerLock*" || notify-fail'
alias bit_='time PATH=~/goma:$PATH `ninja-detect-goma` -C out/Release interactive_ui_tests && out/Release/interactive_ui_tests --gtest_filter="FullscreenControllerStateInteractiveTest.*" || notify-fail'
alias bit__='time PATH=~/goma:$PATH `ninja-detect-goma` -C out/Release interactive_ui_tests && out/Release/interactive_ui_tests --gtest_filter="FullscreenControllerStateInteractiveTest.DISABLED_TabToggle" --gtest_also_run_disabled_tests || notify-fail'
alias bit_disabled_state='time PATH=~/goma:$PATH `ninja-detect-goma` -C out/Release interactive_ui_tests && out/Release/interactive_ui_tests --gtest_filter="FullscreenControllerStateInteractiveTest*STATE*" --gtest_also_run_disabled_tests || notify-fail'
alias bit_TransitionsForEachState='time PATH=~/goma:$PATH `ninja-detect-goma` -C out/Release interactive_ui_tests && out/Release/interactive_ui_tests --gtest_filter="FullscreenControllerStateInteractiveTest.DISABLED_TransitionsForEachState" --gtest_also_run_disabled_tests || notify-fail'
alias bitd='time PATH=~/goma:$PATH `ninja-detect-goma` -C out/Debug interactive_ui_tests && out/Debug/interactive_ui_tests --gtest_filter="*Fullscreen*:*FullScreen*:*Presentation*:*MouseLock*:*PointerLock*" || notify-fail'
alias bpy='time PATH=~/goma:$PATH `ninja-detect-goma` -C out/Release pyautolib chromedriver chrome && LD_LIBRARY_PATH=out/Debug/lib python chrome/test/functional/fullscreen_mouselock.py --chrome-flags="--enable-pointer-lock"'
alias bpy_='time PATH=~/goma:$PATH `ninja-detect-goma` -C out/Release pyautolib chromedriver chrome && LD_LIBRARY_PATH=out/Debug/lib python chrome/test/functional/fullscreen_mouselock.py fullscreen_mouselock.FullscreenMouselockTest.testMouseLockInBrowserFS'
alias bpyd='time PATH=~/goma:$PATH `ninja-detect-goma` -C out/Debug pyautolib chromedriver chrome && LD_LIBRARY_PATH=out/Debug/lib python chrome/test/functional/fullscreen_mouselock.py --chrome-flags="--enable-pointer-lock"'
alias bpyd_='time PATH=~/goma:$PATH `ninja-detect-goma` -C out/Debug pyautolib chromedriver chrome && LD_LIBRARY_PATH=out/Debug/lib python chrome/test/functional/fullscreen_mouselock.py fullscreen_mouselock.FullscreenMouselockTest.testMouseLockInBrowserFS'
alias buit='time PATH=~/goma:$PATH `ninja-detect-goma` -C out/Release ui_tests && out/Release/ui_tests --gtest_filter="BrowserUITest.*" || notify-fail'
alias but='time PATH=~/goma:$PATH `ninja-detect-goma` -C out/Release unit_tests && out/Release/unit_tests --gtest_filter="*Fullscreen*:*FullScreen*:*Presentation*:*MouseLock*:*PointerLock*" || notify-fail'
alias but_state='time PATH=~/goma:$PATH `ninja-detect-goma` -C out/Release unit_tests && out/Release/unit_tests --gtest_filter="*STATE*" --gtest_also_run_disabled_tests || notify-fail'
alias but_transitions_for_each_state='time PATH=~/goma:$PATH `ninja-detect-goma` -C out/Release unit_tests && out/Release/unit_tests --gtest_filter="*TransitionsForEachState*" --gtest_also_run_disabled_tests || notify-fail'
alias but_DebugLogStateTables='time PATH=~/goma:$PATH `ninja-detect-goma` -C out/Release unit_tests && out/Release/unit_tests --gtest_filter="*DebugLogStateTables*" --gtest_also_run_disabled_tests || notify-fail'
alias butd='time PATH=~/goma:$PATH `ninja-detect-goma` -C out/Debug unit_tests && out/Debug/unit_tests --gtest_filter="*Fullscreen*:*FullScreen*:*Presentation*:*MouseLock*:*PointerLock*" || notify-fail'
alias clang-off='unset CC CXX'
alias clang-on='export CC=clang; export CXX=clang++; echo $PATH | grep -q "llvm-build/Release+Asserts" || export PATH=~/chromium/src/third_party/llvm-build/Release+Asserts/bin:$PATH'
alias g='GYP_GENERATORS=ninja build/gyp_chromium'
alias gasan='GYP_GENERATORS=ninja build/gyp_chromium -D asan=1 -D linux_use_tcmalloc=0 -D release_extra_cflags="-g" -D clang=1'
alias gasand='GYP_GENERATORS=ninja build/gyp_chromium -D asan=1 -D linux_use_tcmalloc=0 -D release_extra_cflags="-g" -D clang=1'
alias gaura='GYP_GENERATORS=ninja build/gyp_chromium -D use_aura=1'
alias gaurad='GYP_GENERATORS=ninja build/gyp_chromium -D use_aura=1'
alias gdb-index='./build/gdb-add-index ./out/Debug/chrome && ldd -d ./out/Debug/chrome  | grep "out/Debug/.*\.so" | cut -d ">" -f2 | cut -d " " -f2 | xargs -n1 ./build/gdb-add-index && notify'
alias gos='GYP_GENERATORS=ninja build/gyp_chromium -D chromeos=1'
alias gsync='tools/sync-webkit-git.py && gclient sync -D'
alias lupdate='git branch -D lkgr 1>/dev/null 2&>1; git lkgr | xargs git branch -f lkgr'
alias mount-tmpfs-out='sudo mount -t tmpfs -o size=50% tmpfs out'
alias ninja-detect-goma='if [ -e ~/goma ]; then if [ `uname` == "Darwin" ]; then echo ninja -j 100; else echo ninja -j 700; fi; else echo ninja; fi'
alias notify-fail='notify-send "Fail" "><><><><><><><><><><><><><><><><> <><><><><><><><><><><><><><><><>< ><><><><><><><><><><><><><><><><> <><><><><><><><><><><><><><><><>< ><><><><><><><><><><><><><><><><> <><><><><><><><><><><><><><><><>< ><><><><><><><><><><><><><><><><> <><><><><><><><><><><><><><><><>< ><><><><><><><><><><><><><><><><> ><><><><><><><><><><><><><><><><>" -i /usr/share/pixmaps/apple-red.png'
alias notify-ok='notify-send "OK" "><><><><><><><><><><><><><><><><> <><><><><><><><><><><><><><><><>< ><><><><><><><><><><><><><><><><> <><><><><><><><><><><><><><><><>< ><><><><><><><><><><><><><><><><> <><><><><><><><><><><><><><><><>< ><><><><><><><><><><><><><><><><> <><><><><><><><><><><><><><><><>< ><><><><><><><><><><><><><><><><> ><><><><><><><><><><><><><><><><>" -i /usr/share/pixmaps/apple-green.png'
alias notify='notify-ok || notify-fail'
alias p="pushd +1"
alias r='if [ -e out/Release/chrome ]; then out/Release/chrome --register-pepper-plugins="out/Release/lib/libppapi_example_mouse_lock.so;application/x-ppapi-example-mouse-lock"; else out/Release/Chromium.app/Contents/MacOS/Chromium --register-pepper-plugins="out/Replication/x-ppapi-example-mouse-lock"; fi'
alias rd='if [ -e out/Debug/chrome ]; then out/Debug/chrome --register-pepper-plugins="out/Debug/lib/libppapi_example_mouse_lock.so;application/x-ppapi-example-mouse-lock"; else out/Debug/Chromium.app/Contents/MacOS/Chromium --register-pepper-plugins="out/Replication/x-ppapi-example-mouse-lock"; fi'
alias rr='out/Release/browser_tests --gtest_filter="BrowserTest.TestFullscreenBubbleMouseLockState"'
alias vsmulti='while read x; do vs $x; done'
alias www-permissions='~/scheib/www/permisions.sh'
